;test lists
(load "lists.scm")

(list 1 2 3)   
(cons 1 2)     

(length (quote (1 2 3)))       
(list-ref (quote (0 1 2 3 4)) 3)    

(list-tail (quote (0 1 2 3 4)) 3)
(member (quote a) (quote (1 2 3 a b c)))  
(append (quote (a b)) (quote (c d)))
(reverse (quote (1 2 3)))

(map (lambda (x) (* x x)) (quote (1 2 3)))

(filter odd? (quote (1 2 3)))
(foldl cons (quote ()) (quote (1 2 3)))
(foldr cons (quote ()) (quote (1 2 3)) )





